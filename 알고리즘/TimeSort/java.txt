Comparable vs Comparator

공통점
interface : 반드시 구현
객체를 비교할 수 있도록 만든다

차이점

Comparable
compareTo(T o)
Parameter 1개
Return : -1, 0, 1
Throws : NullPointerException, ClassCastException
자기 자신과 매개변수 객체를 비교
lang패키지에 존재
ex)
class Student implements Comparable<Student>{
  public int compareTo(Student o) {
  }
}


Comparator
compare(T o1, T o2)
Parameter 2개
Return : -1, 0, 1
Throws : NullPointerException, ClassCastException
두 매개변수 객체를 비교
util패키지에 존재
익명 객체 사용 : 재사용하지 않고 일시적으로 사용하고 버려질 수 있는 객체 (이름 없는 객체)
1. main 함수 안에 지역변수처럼 사용한다
2. mian 함수 밖에 static타입으로 선언한다
ex)
import java.util.Comparator; //import 필요
public class ClassName implements Comparator<Type>{
  public int compare(Type o1, Type o2) {
  }
}


java에서 제공하는 정렬 가능한 클래스들은 Comparable 인터페이스를 구현하고 있음
정렬 기준을 다르게 하고 싶을때 Comparable이 아니라 Comparator를 사용

